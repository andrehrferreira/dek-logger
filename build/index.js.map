{"version":3,"sources":["../src/index.js"],"names":["BugsnagTransport","opts","silent","level","Bugsnag","start","apiKey","plugins","BugsnagPluginExpress","info","callback","setImmediate","emit","message","notify","Error","Transport","Object","prototype","hasOwnProperty","call","process","env","console","log","logger","winston","createLogger","format","json","transports","NODE_ENV","add","Console","simple","$","set","getPlugin","e"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACMA,gB;;;;;AACF,4BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,IAAN;AACA,UAAKC,MAAL,GAAcD,IAAI,IAAIA,IAAI,CAACC,MAAb,IAAuB,KAArC;AACA,UAAKC,KAAL,GAAaF,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsB,OAAnC;;AACAC,mBAAQC,KAAR,CAAc;AACVC,MAAAA,MAAM,EAAE,kCADE;AAEVC,MAAAA,OAAO,EAAE,CAACC,yBAAD;AAFC,KAAd;;AAJc;AAQjB;;;;wBACIC,I,EAAMC,Q,EAAU;AAAA;;AACjBC,MAAAA,YAAY,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,CAAU,QAAV,EAAoBH,IAApB,CAAN;AAAA,OAAD,CAAZ;;AACA,UAAI,KAAKP,MAAT,EAAiB;AACb,YAAI,OAAOQ,QAAP,IAAmB,UAAvB,EAAmC,OAAOA,QAAQ,EAAf;AACnC;AACH;;AACD,UAAG,OAAOD,IAAI,CAACI,OAAZ,IAAuB,QAA1B,EAAoC;AAChCT,uBAAQU,MAAR,CAAe,IAAIC,KAAJ,CAAUN,IAAI,CAACI,OAAf,CAAf;AACH,OAFD,MAEO;AACHT,uBAAQU,MAAR,CAAeL,IAAf;AACH;;AACD,UAAI,OAAOC,QAAP,IAAmB,UAAvB,EAAmC,OAAOA,QAAQ,EAAf;AACnC;AACH;;;;EAvB0BM,4B;;oFA0BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,cAAI;AACA,gBACI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CACGC,OAAO,CAACC,GADX,EAEG,wBAFH,CADL,EAKE;AACE;AACAC,cAAAA,OAAO,CAACC,GAAR,CACI,4EADJ;AAGH,aAVD,MAUO;AACGC,cAAAA,MADH,GACYC,oBAAQC,YAAR,CAAqB;AAChCxB,gBAAAA,KAAK,EAAE,MADyB;AAEhCyB,gBAAAA,MAAM,EAAEF,oBAAQE,MAAR,CAAeC,IAAf,EAFwB;AAGhCC,gBAAAA,UAAU,EAAE,CACR,IAAI9B,gBAAJ,CAAqB;AAAEG,kBAAAA,KAAK,EAAE;AAAT,iBAArB,CADQ;AAHoB,eAArB,CADZ;;AASH,kBAAIkB,OAAO,CAACC,GAAR,CAAYS,QAAZ,KAAyB,YAA7B,EAA2C;AACvCN,gBAAAA,MAAM,CAACO,GAAP,CAAW,IAAIN,oBAAQI,UAAR,CAAmBG,OAAvB,CAA+B;AACtCL,kBAAAA,MAAM,EAAEF,oBAAQE,MAAR,CAAeM,MAAf;AAD8B,iBAA/B,CAAX;AAGH;;AACDC,uBAAEC,GAAF,CACI,QADJ,EAEIX,MAFJ;;AAKAU,uBAAEC,GAAF,CAAM,gBAAN,EACIhC,eAAQiC,SAAR,CAAkB,SAAlB,CADJ;AAGH;AACJ,WAlCD,CAkCE,OAAOC,CAAP,EAAU;AACR;AACAf,YAAAA,OAAO,CAACC,GAAR,wBAA4Bc,CAAC,CAACzB,OAA9B;AACH;;AAtCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","sourcesContent":["import winston from \"winston\";\nimport Bugsnag from \"@bugsnag/js\";\nimport Transport from \"winston-transport\";\nimport BugsnagPluginExpress from \"@bugsnag/plugin-express\";\nimport { $ } from \"@dekproject/scope\";\nclass BugsnagTransport extends Transport {\n    constructor(opts) {\n        super(opts);\n        this.silent = opts && opts.silent || false;\n        this.level = opts && opts.level || \"silly\";\n        Bugsnag.start({\n            apiKey: \"c1e5a7d3213ba131cb80fca9ff5600c2\",\n            plugins: [BugsnagPluginExpress]\n        });\n    }\n    log (info, callback) {\n        setImmediate(() => this.emit(\"logged\", info));\n        if (this.silent) {\n            if (typeof callback == \"function\") return callback();\n            return;\n        }\n        if(typeof info.message == \"string\") {\n            Bugsnag.notify(new Error(info.message));\n        } else {\n            Bugsnag.notify(info);\n        }\n        if (typeof callback == \"function\") return callback();\n        return;\n    }\n}\n\nexport default async () => {\n    try {\n        if (\n            !Object.prototype.hasOwnProperty.call(\n                process.env,\n                \"LOGGER_BUGSNAG_API_KEY\"\n            )\n        ) {\n            // eslint-disable-next-line no-console\n            console.log(\n                \"[ LOGGER ] - There is no LOGGER_BUGSNAG_API_KEY variable in the .env file.\"\n            );\n        } else {\n            const logger = winston.createLogger({\n                level: \"info\",\n                format: winston.format.json(),\n                transports: [\n                    new BugsnagTransport({ level: \"error\" })\n                ]\n            });\n         \n            if (process.env.NODE_ENV !== \"production\") {\n                logger.add(new winston.transports.Console({\n                    format: winston.format.simple()\n                }));\n            }\n            $.set(\n                \"logger\",\n                logger\n            );\n\n            $.set(\"bugsnagexpress\",\n                Bugsnag.getPlugin(\"express\")\n            );\n        }\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(`[ Logger ] - ${e.message}`);\n    }\n};\n"],"file":"index.js"}